name: Continuous Integration
on: [push]                      # Will make the workflow run every time you push to any branch

jobs:
  build:
    name: Build, test, publish to Docker hub and deploy to Heroku
    runs-on: ubuntu-latest      # Sets the build environment a machine with the latest Ubuntu installed
    steps:
    - uses: actions/checkout@v2 # Adds a step to checkout the repository code

    - name: Build the C# code
      run: dotnet build

    - name: Run the C# tests
      run: dotnet test

    - name: Build the TypeScript code
      run: |
        cd DotnetTemplate.Web
        npm install
        npm run build

    - name: Run linter on the TypeScript code
      run: |
        cd DotnetTemplate.Web
        npm run lint

    - name: Run the TypeScript tests
      run: |
        cd DotnetTemplate.Web
        npm t
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with: 
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/dotnettemplate:latest
  
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}

    - name: Login to Heroku Container registry
      env: 
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku container:login 
    - name: Push image to Heroku registry
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        docker tag dotnettemplate:latest registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web
        docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web
    - name: Release image
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku container:release -a ${{ secrets.HEROKU_APP_NAME }} web 